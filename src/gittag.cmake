#!/usr/bin/cmake -P
set(VERSION_FILENAME "version.h")
execute_process(COMMAND git describe --tags --always HEAD OUTPUT_VARIABLE GIT_TAG OUTPUT_STRIP_TRAILING_WHITESPACE)
execute_process(COMMAND git rev-parse --abbrev-ref HEAD OUTPUT_VARIABLE GIT_BRANCH OUTPUT_STRIP_TRAILING_WHITESPACE)

file(WRITE ${VERSION_FILENAME} "//\n")
file(APPEND ${VERSION_FILENAME} "// Do not edit, this file is auto generated!\n")
file(APPEND ${VERSION_FILENAME} "//\n")
file(APPEND ${VERSION_FILENAME} "\n")
file(APPEND ${VERSION_FILENAME} "#ifndef RC_INVOKED\n")
file(APPEND ${VERSION_FILENAME} "#pragma once\n")
file(APPEND ${VERSION_FILENAME} "namespace xb2at {\n")
file(APPEND ${VERSION_FILENAME} "namespace version {\n\n")
file(APPEND ${VERSION_FILENAME} "\tconstexpr static char tag[] = \"${GIT_TAG}\";\n")
file(APPEND ${VERSION_FILENAME} "\tconstexpr static char branch[] = \"${GIT_BRANCH}\";\n")
file(APPEND ${VERSION_FILENAME} "\n}")
file(APPEND ${VERSION_FILENAME} "\n}\n")
file(APPEND ${VERSION_FILENAME} "#else\n")
file(APPEND ${VERSION_FILENAME} "// so we can stamp the win32 exes with git version\n")
file(APPEND ${VERSION_FILENAME} "\t#define GIT_TAG \"${GIT_TAG}\"\n")
file(APPEND ${VERSION_FILENAME} "\t#define GIT_BRANCH \"${GIT_BRANCH}\"\n")
file(APPEND ${VERSION_FILENAME} "#endif\n")

message(STATUS "Generated ${VERSION_FILENAME} for ${GIT_TAG}-${GIT_BRANCH}.")